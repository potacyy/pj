/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package store;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import jnafilechooser.api.JnaFileChooser;

/**
 *
 * @author USER
 */
public class Inventory extends javax.swing.JInternalFrame {
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String path;
    int Id;
    byte[] img;
    /**
     * Creates new form Inventory
     */
    public Inventory() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        Connect();
        getTable();
        table1.setRowHeight(30);
    }
    
    public void Connect(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/storej", "root", "");
            System.out.println("Database Connect");
        } 
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Connection Lost " + ex);
        }
        
    }
    public void getTable(){
        Object [] row;
        try {
            pst = con.prepareStatement("Select prod_ID,prod_name, price, stocks, arbitrage, date from prod_info");
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel)table1.getModel();
            model.setRowCount(0);
            while(rs.next()){
                row = new Object[6];
                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                row[3] = rs.getString(4);
                row[4] = rs.getString(5);
                row[5] = rs.getString(6);
                model.addRow(row);
                
            }
            
            
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new pjstore.table();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTxt_prodName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTxt_price = new javax.swing.JTextField();
        jTxt_arbitrage = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTxt_stocks = new javax.swing.JTextField();
        jLbl_pic = new javax.swing.JLabel();
        jBtn_import = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jBtn_delete = new javax.swing.JButton();
        jBtn_add = new javax.swing.JButton();
        jBtn_edit = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ProductID", "Product Name", "Price", "Stocks", "Arbitrage", "Date  Added"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setResizable(false);
            table1.getColumnModel().getColumn(1).setResizable(false);
            table1.getColumnModel().getColumn(3).setResizable(false);
            table1.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 690, 550));

        jPanel8.setBackground(new java.awt.Color(93, 114, 98));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("PRODUCT STOCKINFORMATION");
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jTxt_prodName.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jPanel8.add(jTxt_prodName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 140, 30));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Product Name :");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Unit Price :");
        jPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, 30));

        jTxt_price.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTxt_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxt_priceKeyTyped(evt);
            }
        });
        jPanel8.add(jTxt_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 140, 30));

        jTxt_arbitrage.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTxt_arbitrage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxt_arbitrageKeyTyped(evt);
            }
        });
        jPanel8.add(jTxt_arbitrage, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 140, 30));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Arbitrage :");
        jPanel8.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, 30));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Current Stocks:");
        jPanel8.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, 30));

        jTxt_stocks.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTxt_stocks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxt_stocksKeyTyped(evt);
            }
        });
        jPanel8.add(jTxt_stocks, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 140, 30));

        jLbl_pic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jPanel8.add(jLbl_pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 190, 130));

        jBtn_import.setBackground(new java.awt.Color(153, 255, 153));
        jBtn_import.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jBtn_import.setText("Import");
        jBtn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_importActionPerformed(evt);
            }
        });
        jPanel8.add(jBtn_import, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 100, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("DELETE");
        jPanel8.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 50, 30));

        jBtn_delete.setBackground(new java.awt.Color(255, 153, 153));
        jBtn_delete.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jBtn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_deleteActionPerformed(evt);
            }
        });
        jPanel8.add(jBtn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 70, 50));

        jBtn_add.setBackground(new java.awt.Color(153, 255, 153));
        jBtn_add.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtn_add.setText("ADD");
        jBtn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_addActionPerformed(evt);
            }
        });
        jPanel8.add(jBtn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 70, 50));

        jBtn_edit.setBackground(new java.awt.Color(247, 218, 162));
        jBtn_edit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtn_edit.setText("EDIT");
        jBtn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_editActionPerformed(evt);
            }
        });
        jPanel8.add(jBtn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 70, 50));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 260, 550));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 950, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxt_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxt_priceKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_jTxt_priceKeyTyped

    private void jTxt_stocksKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxt_stocksKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_jTxt_stocksKeyTyped

    private void jTxt_arbitrageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxt_arbitrageKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_jTxt_arbitrageKeyTyped

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
         // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table1.getModel();
        int selectedRow = table1.getSelectedRow();
        
       Id = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
       jTxt_prodName.setText(model.getValueAt(selectedRow, 1).toString());
       jTxt_price.setText(model.getValueAt(selectedRow, 2).toString());
       jTxt_arbitrage.setText(model.getValueAt(selectedRow, 4).toString());
       jTxt_stocks.setText(model.getValueAt(selectedRow, 3).toString());
       
        try {
            pst = con.prepareStatement("SELECT picture FROM prod_info WHERE prod_ID = '"+Id+"'");
            rs = pst.executeQuery();
            
            if(rs.next()){
              img = rs.getBytes(1);
                System.out.println(img);
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage().getScaledInstance(jLbl_pic.getWidth(), jLbl_pic.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(im);
                jLbl_pic.setIcon(newImage);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
 
        
    }//GEN-LAST:event_table1MouseClicked

    private void jBtn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_importActionPerformed
        // TODO add your handling code here:
        String defaultCurrentDirectoryPath = "C:\\Users\\Public\\Documents";
        JFileChooser fileChooser = new JFileChooser(defaultCurrentDirectoryPath);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "png", "gif");
        fileChooser.addChoosableFileFilter(filter);
      int chooser = fileChooser.showOpenDialog(null);
        
      if(chooser == JFileChooser.APPROVE_OPTION){
          
      File ff = fileChooser.getSelectedFile();
      String paths = ff.getAbsolutePath();  
      
      try{
           BufferedImage bi = ImageIO.read(new File(paths));
           Image img = bi.getScaledInstance(jLbl_pic.getWidth(), jLbl_pic.getHeight(), Image.SCALE_SMOOTH);
           ImageIcon icon = new ImageIcon(img);
           jLbl_pic.setIcon(icon);
           path = paths;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please Do Select Image File Only :)");
           e.printStackTrace();
           
        }
      }else{
          JOptionPane.showMessageDialog(null, "Command Canceled");
      }
        
        /*JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "png", "gif");
        fileChooser.addChoosableFileFilter(filter);
        
        int result = fileChooser.showSaveDialog(this);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedImage = fileChooser.getSelectedFile();
            String imagePath = selectedImage.getAbsolutePath();
            try {
                
            } catch (Exception e) {
            }
        }*/
        
    }//GEN-LAST:event_jBtn_importActionPerformed

    private void jBtn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_addActionPerformed
        // TODO add your handling code here:
        Date thisDate = new Date();
         String date1 = new SimpleDateFormat("yyyy-MM-dd").format(thisDate);
         if(jLbl_pic==null || jTxt_prodName.getText().isEmpty() || jTxt_price.getText().isEmpty() || jTxt_arbitrage.getText().isEmpty() || jTxt_stocks.getText().isEmpty()){
             
             JOptionPane.showMessageDialog(null, "All Data Is Required", "Error", JOptionPane.ERROR_MESSAGE);
         
         }
         else{
             try {
                 pst = con.prepareStatement("SELECT * from prod_info WHERE prod_name= '"+jTxt_prodName.getText()+"'");
                 rs = pst.executeQuery();
                 if(rs.next()){
                     JOptionPane.showMessageDialog(null, "Product Already existed", "Error", JOptionPane.ERROR_MESSAGE );
                     jTxt_prodName.setText("");
         jTxt_price.setText("");
         jTxt_stocks.setText("");
         jTxt_arbitrage.setText("");
         jLbl_pic.setIcon(null);
                 }else{
         pst = con.prepareStatement("INSERT INTO prod_info (prod_name,price, stocks, arbitrage, date, picture) VALUES (?,?,?,?,?,?)");
         pst.setString(1, jTxt_prodName.getText());
         pst.setString(2, jTxt_price.getText());
         pst.setString(3, jTxt_stocks.getText());
         pst.setString(4, jTxt_arbitrage.getText());
         pst.setString(5, date1);
         InputStream is = new FileInputStream(new File(path));
         pst.setBlob(6, is);
         pst.execute();
         JOptionPane.showMessageDialog(this,"Product Added Successfully!");
         getTable();
         jTxt_prodName.setText("");
         jTxt_price.setText("");
         jTxt_stocks.setText("");
         jTxt_arbitrage.setText("");
         jLbl_pic.setIcon(null);
                 }
        } catch (Exception e) {
            e.printStackTrace();
        }
             
         }
         
    }//GEN-LAST:event_jBtn_addActionPerformed

    private void jBtn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_editActionPerformed
        // TODO add your handling code here:
        
         Date thisDate = new Date();
         String date1 = new SimpleDateFormat("yyyy-MM-dd").format(thisDate);
         DefaultTableModel model = (DefaultTableModel) table1.getModel();
         int selectedRow = table1.getSelectedRow();
         
         if(selectedRow <0 ){
             JOptionPane.showMessageDialog(null, "Can't Edit Product That Doesn't Exist In Inventory", "Error", JOptionPane.ERROR_MESSAGE);
             
         }else{
        
    
         if(jLbl_pic==null || jTxt_prodName.getText().isEmpty() || jTxt_price.getText().isEmpty() || jTxt_arbitrage.getText().isEmpty() || jTxt_stocks.getText().isEmpty()){
             
             JOptionPane.showMessageDialog(null, "All Data Is Required", "Error", JOptionPane.ERROR_MESSAGE);
         
         }
         else{
             if(path ==null){
                 String id = model.getValueAt(selectedRow, 0).toString();
                  try {
         pst = con.prepareStatement("UPDATE prod_info SET prod_name = ?, price = ?, arbitrage = ?, stocks =? , date = ? where prod_ID = '"+id+"' ");
         pst.setString(1, jTxt_prodName.getText());
         pst.setString(2, jTxt_price.getText());
         pst.setString(3, jTxt_stocks.getText());
         pst.setString(4, jTxt_arbitrage.getText());
         pst.setString(5, date1);
         
         pst.executeUpdate();
         JOptionPane.showMessageDialog(this,"Product Updated Successfully!");
         getTable();
         jTxt_prodName.setText("");
         jTxt_price.setText("");
         jTxt_stocks.setText("");
         jTxt_arbitrage.setText("");
         jLbl_pic.setIcon(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
             }else{
                 String id = model.getValueAt(selectedRow, 0).toString();
             try {
         pst = con.prepareStatement("UPDATE prod_info SET prod_name = ?, price = ?, arbitrage = ?, stocks =? , date = ?, picture = ? where prod_ID = '"+id+"' ");
         pst.setString(1, jTxt_prodName.getText());
         pst.setString(2, jTxt_price.getText());
         pst.setString(3, jTxt_stocks.getText());
         pst.setString(4, jTxt_arbitrage.getText());
         pst.setString(5, date1);
         InputStream is = new FileInputStream(new File(path));
                 System.out.println(is);
         pst.setBlob(6, is);
         pst.executeUpdate();
         JOptionPane.showMessageDialog(this,"Product Updated Successfully!");
         getTable();
         jTxt_prodName.setText("");
         jTxt_price.setText("");
         jTxt_stocks.setText("");
         jTxt_arbitrage.setText("");
         jLbl_pic.setIcon(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
             }
             
         }
         }
    }//GEN-LAST:event_jBtn_editActionPerformed

    private void jBtn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_deleteActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Are you sure to Delete " + jTxt_prodName.getText() + "?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION){

            String url = "Delete From prod_info where prod_ID ='" + Id + "'";
            

            try {
                pst = con.prepareStatement(url);
                pst.execute();

                
                
                JOptionPane.showMessageDialog(null, jTxt_prodName.getText() + " Deleted", "Delete", JOptionPane.INFORMATION_MESSAGE);
                getTable();
                jTxt_prodName.setText("");
                jTxt_price.setText("");
                jTxt_arbitrage.setText("");
                jTxt_stocks.setText("");
                jLbl_pic.setIcon(null);

            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } 
    }//GEN-LAST:event_jBtn_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_add;
    private javax.swing.JButton jBtn_delete;
    private javax.swing.JButton jBtn_edit;
    private javax.swing.JButton jBtn_import;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLbl_pic;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField jTxt_arbitrage;
    private javax.swing.JTextField jTxt_price;
    private javax.swing.JTextField jTxt_prodName;
    private javax.swing.JTextField jTxt_stocks;
    private pjstore.table table1;
    // End of variables declaration//GEN-END:variables
}
