/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package store;

import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class Purchase extends javax.swing.JInternalFrame {

    /**
     * Creates new form Purchase
     */
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    double arbitrage;
                  double profit;
                  byte[] img;
                  
                  
    public Purchase() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        jtable.setRowHeight(30);
        table2.setRowHeight(30);
        getTotal();
        Connect();
        getTable();
        
    }
    //PAG KUHA MGA DATA HA ORDER PAGE
    /*public Purchase(Object[] dataRow) {
        initComponents();
        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        model.addRow(dataRow);
        System.out.println("pota");
    }*/
    //PAG KUHA MGA DATA HA ORDER PAGE
    public static void AddRowTable(Object[] dataRow){
        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        System.out.println(Arrays.toString(dataRow));
        model.addRow(dataRow);
    }
    
    public void Connect(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/storej", "root", "");
            System.out.println("Database Connect");
        } 
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Connection Lost " + ex);
        }
        
    }
    public void getTable(){
        Object [] row;
        try {
            pst = con.prepareStatement("Select prod_ID,prod_name,stocks,price from prod_info");
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel)jtable.getModel();
            model.setRowCount(0);
            while(rs.next()){
                row = new Object[6];
                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                row[3] = rs.getString(4);
                model.addRow(row);
            }
            
            
        } catch (Exception e) {
        }
    }
    public static void getTotal(){
        
        int subTotal = 0;
        int rowCount = table2.getRowCount();
        if(rowCount >= 0){
          DefaultTableModel model = (DefaultTableModel) table2.getModel();
        for (int i = 0; i < rowCount; i++) {
            double val = Double.parseDouble(model.getValueAt(i, 4).toString());
             subTotal += val;
             jLabel7.setText(String.valueOf(subTotal));
        }
        }
    }
        
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTxtFld_Payment = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jBtn_clear = new javax.swing.JButton();
        jBtn_confirm = new javax.swing.JButton();
        jBtn_delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtable = new pjstore.table();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        setPreferredSize(new java.awt.Dimension(972, 612));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(93, 114, 98));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Your Cart");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 130, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Enter Payment:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 110, 30));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 150, 30));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 50, 30));

        jTxtFld_Payment.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTxtFld_Payment.setOpaque(true);
        jTxtFld_Payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtFld_PaymentKeyTyped(evt);
            }
        });
        jPanel2.add(jTxtFld_Payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 150, 30));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel9.setOpaque(true);
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, 150, 30));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Change:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 70, 30));

        jBtn_clear.setBackground(new java.awt.Color(247, 218, 162));
        jBtn_clear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtn_clear.setText("Clear");
        jBtn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_clearActionPerformed(evt);
            }
        });
        jPanel2.add(jBtn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, 80, 40));

        jBtn_confirm.setBackground(new java.awt.Color(153, 255, 153));
        jBtn_confirm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtn_confirm.setText("Confrim");
        jBtn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_confirmActionPerformed(evt);
            }
        });
        jPanel2.add(jBtn_confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 80, 40));

        jBtn_delete.setBackground(new java.awt.Color(255, 153, 153));
        jBtn_delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtn_delete.setText("Delete");
        jBtn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_deleteActionPerformed(evt);
            }
        });
        jPanel2.add(jBtn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 460, 80, 40));

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product", "Price", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table2);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 330, 230));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, 550));

        jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product ID", "Name", "Stocks", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 620, 550));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 950, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtFld_PaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFld_PaymentKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_jTxtFld_PaymentKeyTyped

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jBtn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_confirmActionPerformed
        // TODO add your handling code here:
        Date thisDate = new Date();
         String date1 = new SimpleDateFormat("yyyy-MM-dd").format(thisDate);
         DefaultTableModel model = (DefaultTableModel)table2.getModel();
        
         double change = 0;
         int rowCount = table2.getRowCount();
         int qty;
         int stocks;
         
         if(table2.getRowCount() <= 0){
             JOptionPane.showMessageDialog(null, "Your Cart is Empty", "Cart", JOptionPane.ERROR_MESSAGE);
         }else if (jTxtFld_Payment.getText().isEmpty()){
             JOptionPane.showMessageDialog(null, "Please Enter Payment", "Payment", JOptionPane.ERROR_MESSAGE);
         }else{
              double total = Double.parseDouble(jLabel7.getText());
         double payment = Double.parseDouble(jTxtFld_Payment.getText());
         if(payment >= total){
             try {
             change = payment - total;
             jLabel9.setText(String.valueOf(change));
             JOptionPane.showMessageDialog(null, "Thank You for Buying! Here's Your Change : " + change +" Please Come Again :)" );
             
             jLabel7.setText("");
             jTxtFld_Payment.setText("");
             jLabel9.setText("");
                 for (int i = 0; i < rowCount; i++) {
                     try {
                        qty = Integer.parseInt(model.getValueAt(i, 3).toString()) ;
                        int id = Integer.parseInt(model.getValueAt(i, 0).toString());
                        
                        pst = con.prepareStatement("UPDATE prod_info SET stocks = stocks - ? WHERE prod_Id = '"+id+"'");
                        pst.setInt(1, qty);
                        pst.executeUpdate();
                        
                     } catch (Exception e) {
                         e.printStackTrace();
                     }
                 }
              
                 for (int i = 0; i < rowCount; i++) {
                  double totals = Double.parseDouble(model.getValueAt(i, 4).toString());
                     int id = Integer.parseInt(model.getValueAt(i, 0).toString());
                     pst = con.prepareStatement("SELECT arbitrage, picture FROM prod_info WHERE prod_ID = '"+id+"'");
                     rs = pst.executeQuery();
                     if(rs.next()){
                          arbitrage = Double.parseDouble(rs.getString(1));
                          img = rs.getBytes(2);
                          profit =  totals - arbitrage;
                     }
                     
                 pst = con.prepareStatement("INSERT INTO sales_info (prod_ID, prod_name, price, qty, total, profit, date) VALUES (?,?,?,?,?,?,?)");
                 pst.setString(1, model.getValueAt(i, 0).toString());
                 pst.setString(2, model.getValueAt(i, 1).toString());
                 pst.setString(3, model.getValueAt(i, 2).toString());
                 pst.setString(4, model.getValueAt(i, 3).toString());
                 pst.setString(5, model.getValueAt(i, 4).toString());
                 pst.setDouble(6,profit);
                 pst.setString(7, date1);
                 pst.execute();
                     System.out.println(pst);
                 }
                 
                 model.setRowCount(0);
             } catch (Exception e) {
                 e.printStackTrace();
             }
         }else if(payment < total){
             JOptionPane.showMessageDialog(null, "Sorry Insufficient Payment, Please Do Come Back Again When You Have Enough Money Already", "Sorry", JOptionPane.WARNING_MESSAGE);
             
         }else{
             JOptionPane.showMessageDialog(null, "Please Enter Your Payment");
         }
         getTable();
         }
    }//GEN-LAST:event_jBtn_confirmActionPerformed

    private void jBtn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_deleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        int selectedRow = table2.getSelectedRow();
        int selectedRow1 = jtable.getSelectedRow();
        
        if(selectedRow >= 0){
            int response = JOptionPane.showConfirmDialog(null, "Are You Sure To Delete " + model.getValueAt(selectedRow, 1) + " ?", "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION){
                System.out.println(selectedRow);
                System.out.println(selectedRow1);
                int qty = Integer.parseInt(table2.getValueAt(selectedRow, 3).toString()) + Integer.parseInt(jtable.getValueAt(selectedRow1, 2).toString());
            jtable.setValueAt(qty, selectedRow1, 2);
            model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(null, "Product Deleted");
            }
        }else{
            JOptionPane.showMessageDialog(null, "You Haven't Selected Product Yet");
        }
        
        
    }//GEN-LAST:event_jBtn_deleteActionPerformed

    private void jBtn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_clearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        
        model.setRowCount(0);
        jLabel7.setText("");
             jTxtFld_Payment.setText("");
             jLabel9.setText("");
    }//GEN-LAST:event_jBtn_clearActionPerformed

    private void jtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableMouseClicked
        // TODO add your handling code here:
        cart2 c = new cart2();
        int index = jtable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jtable.getModel();
        String id = model.getValueAt(index, 0).toString();
        String name = model.getValueAt(index, 1).toString();
        String stocks = model.getValueAt(index, 2).toString();
        String price = model.getValueAt(index, 3).toString();
        try {
            pst = con.prepareStatement("SELECT picture FROM prod_info WHERE prod_ID = '"+id +"'");
            rs = pst.executeQuery();
            
            if(rs.next()){
                byte[] img = rs.getBytes(1);
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage().getScaledInstance(c.jLabel20.getWidth(), c.jLabel20.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(im);
                c.jLabel20.setIcon(newImage);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        c.setVisible(true);
        c.pack();
        c.setLocationRelativeTo(null);
        c.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        
        
        c.jLabel3.setText(id);
        c.jLabel4.setText(name);
        c.jLabel5.setText(stocks);
        c.jLabel6.setText(price);
        c.jLabel10.setText(String.valueOf(index));
    }//GEN-LAST:event_jtableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_clear;
    private javax.swing.JButton jBtn_confirm;
    private javax.swing.JButton jBtn_delete;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private static javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTxtFld_Payment;
    public static pjstore.table jtable;
    private static javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
